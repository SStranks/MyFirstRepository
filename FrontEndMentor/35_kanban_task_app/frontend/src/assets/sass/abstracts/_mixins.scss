/* -------------------------------- */
/*            ~ Mixins ~            */
/* -------------------------------- */
/*        [Kanban Task App]         */
/* -------------------------------- */
/*   Frontend Mentor Challenge      */
/*   Difficulty: Guru               */
/*   [www.frontendmentor.io]        */
/* -------------------------------- */
/*   version:   1.0                 */
/*   date:      07/11/2022          */
/*   author:    Simon Stranks       */
/*   website:   github.com/SStranks */
/* -------------------------------- */

/*   Imports                        */
@use 'sass:list';
@use 'animations' as a;
@use 'colors' as c;
@use 'functions' as f;
@use 'variables' as v;

/* -------------------------------- */
/*   Text: Header                   */
/* -------------------------------- */
@mixin header-xl {
  font-weight: 700;
  font-size: f.px2rem(24);
  line-height: f.px2rem(30);
}

@mixin header-l {
  font-weight: 700;
  font-size: f.px2rem(18);
  line-height: f.px2rem(23);
}

@mixin header-m {
  font-weight: 700;
  font-size: f.px2rem(15);
  line-height: f.px2rem(19);
}

@mixin header-s {
  font-weight: 700;
  font-size: f.px2rem(12);
  line-height: f.px2rem(15);
  letter-spacing: f.px2rem(2.4);
}

/* -------------------------------- */
/*   Text: Body                     */
/* -------------------------------- */

@mixin body-l {
  font-weight: 500;
  font-size: f.px2rem(13);
  line-height: f.px2rem(23);
}

@mixin body-m {
  font-weight: 700;
  font-size: f.px2rem(12);
  line-height: f.px2rem(15);
}

/* -------------------------------- */
/*   Extend Click Area              */
/* -------------------------------- */

@mixin extend-clickarea($x: 175%, $y: 150%, $visible: true) {
  &::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: $x;
    height: $y;
    @if $visible == true {
      background: rgba(239, 172, 207, 0.8);
    }
  }
}

/* -------------------------------- */
/*   Input: Text                    */
/* -------------------------------- */

// @mixin input-text {
//   @include body-l;
//   padding: f.px2em(8) f.px2em(16);
//   background-color: transparent;
//   border: 1px solid c.$col-2c;
//   border-radius: v.$border-radius-input-text;

//   &::placeholder {
//     color: var(--thm-input-text-default-active-placeholder);
//     transition: a.$Theme-transition-color;
//   }
// }

// @mixin text-modifier-black {
//   font-weight: 700;
//   color: var(--color-text-p);
//   transition: a.$Theme-transition;
// }

/*   Card                           */
// @mixin card {
//   background-color: $white;
//   border-radius: $border-radius-1;
//   padding: f.px2em(24);
// }

/*   Text Area                      */
// @mixin textarea {
//   @include body-2;
//   border: none;
//   border-radius: $border-radius-2;
//   resize: vertical;
//   width: 100%;
//   padding: f.px2em(16) f.px2em(24);
//   background-color: $pale-blue;
//   color: $navy-blue;

//   &::placeholder {
//     color: $fade-blue;
//   }

//   &:focus {
//     outline: 1px solid $royal-blue;
//   }
// }

/*   Errors                         */
// @mixin input-error {
//   $element: &;
//   &--error {
//     #{$element} {
//       outline: 1px solid $blood-red;

//       &:focus {
//         outline: 1px solid $blood-red;
//       }
//     }

//     &::after {
//       content: "Can't be empty";
//       @include body-4;
//       left: 0;
//       bottom: 0;
//       color: $blood-red;
//     }
//   }
// }

/* -------------------------------- */
/*   Colors: Column, Bullets        */
/* -------------------------------- */

@mixin colorTheme($zero-index: false) {
  $j: 0;
  @if $zero-index == true {
    $j: 1;
  }

  @for $i from 1 through list.length(c.$col-theme-list) {
    $color: list.nth(c.$col-theme-list, $i);
    &--#{$i - $j} {
      @content ($color);
    }
  }
}

/* -------------------------------- */
/*   Fluid Typogrpahy               */
/* -------------------------------- */

// The first two arguments are for screen resolutions from which the font will be responsive.
// The last two arguments are for the smallest and largest font size.
// Calculates line-height automatically.
@mixin fluid-font($min-width, $max-width, $min-font-size, $max-font-size) {
  $unit1: unit($min-width);
  $unit2: unit($max-width);
  $unit3: unit($min-font-size);
  $unit4: unit($max-font-size);
  @if $unit1 == $unit2 and $unit1 == $unit3 and $unit1 == $unit4 {
    & {
      font-size: $min-font-size;
      line-height: $min-font-size * 1.618;
      @media screen and (min-width: $min-width) {
        font-size: calc(
          #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
            ((100vw - #{$min-width}) / #{strip-unit($max-width - $min-width)})
        );
        line-height: calc(
          #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
            1.618 *
            ((100vw - #{$min-width}) / #{strip-unit($max-width - $min-width)})
        );
      }
      @media screen and (min-width: $max-width) {
        font-size: $max-font-size;
        line-height: $max-font-size * 1.618;
      }
    }
  }
}
